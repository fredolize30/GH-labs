name: deploy web app
on:
  push:
    branches:
      - master     
jobs:
  lint:
    strategy:
      matrix:
        node-version: [18, 20]
        operating-system: [ubuntu-latest, windows-latest]
        exclude:
          - operating-system: windows-latest 
    runs-on: ${{ matrix.operating-system }} 
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Caching Dependencies
        id: willy
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-module-${{ hashfiles('./package-lock.json') }}  
      - name: install node dependencies
        if: steps.willy.outputs.cache-hit != 'true'
        run: npm ci
      - name: lint code
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest 
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Caching Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-module-${{ hashfiles('./package-lock.json') }}  
      - name: install dependencies
        run: npm ci
      - name: Test code 
        id: willy2  
        run: npm run test
      - name: failed test
        if: failure() && steps.willy2.outcome == 'failure'  
        run: echo "Failed Test"  
      
  build:
    needs: test
    runs-on: ubuntu-latest 
    outputs:
      my_output: ${{ steps.willy.outputs.test }} 
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Caching Dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: deps-node-module-${{ hashfiles('./package-lock.json') }}  
      - name: install dependencies
        run: npm ci
      - name: Build code
        run: npm run build
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: ./dist 
      - name: get output
        id: willy
        run: echo "test=hello world" >> "$GITHUB_OUTPUT"       
  deploy:
    needs: build
    runs-on: ubuntu-latest 
    env:
      my_message: "hello world"
    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
      - name: list artifact file
        run: ls     
      - name: deploy web artifact
        run: echo "Deploying web app artifact..."   
      - name: see output
        run: echo ${{ needs.build.outputs.my_output }}
      - name: Get information
        run: echo ${{ env.my_message }}                                    